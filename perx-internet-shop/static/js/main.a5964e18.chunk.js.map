{"version":3,"sources":["components/button/Button.module.scss","components/product/ProductCard.module.scss","components/cart/CartButton.module.scss","components/navbar/Navbar.module.scss","components/container/Container.module.scss","layouts/main/MainLayout.module.scss","components/product/ProductCards.module.scss","components/card/Card.module.scss","components/card/CardBody.module.scss","components/card/CardFooter.module.scss","core/redux/utils.ts","utils/constants.ts","core/redux/reducers/products.ts","core/redux/reducers/cart.ts","core/redux/reducers/index.ts","core/redux/index.ts","components/cart/CartButton.tsx","components/container/index.tsx","components/navbar/index.tsx","layouts/main/MainLayout.tsx","components/card/Card.tsx","components/card/CardBody.tsx","components/card/CardFooter.tsx","components/button/Button.tsx","components/product/ProductCard.tsx","utils/image.ts","components/product/ProductCards.tsx","pages/home.tsx","components/cart/CartGridItem.tsx","components/cart/CartGrid.tsx","pages/cart.tsx","Application.tsx","index.tsx","components/cart/CartGrid.module.scss"],"names":["module","exports","withPrefix","prefix","actionName","useAppDispatch","useDispatch","useAppSelector","useSelector","baseURL","apiURL","getActionName","filterDealers","dealers","a","length","fetch","response","json","data","filter","item","find","dealer","fetchProducts","createAsyncThunk","thunkAPI","url","filteredDealers","join","products","map","product","uuid","uuidv4","productsReducer","createReducer","isLoading","builder","addCase","pending","state","rejected","fulfilled","action","payload","selectProductsData","createSelector","addToCart","createAction","removeFromCart","removeAllFromCart","cartReducer","items","existing","v","count","push","selectCartItems","cart","selectCartItemsCount","reduce","acc","selectCartTotalPrice","price","toFixed","rootReducer","combineReducers","persistConfig","key","storage","whitelist","persistedReducer","persistReducer","persistActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","persistor","persistStore","CartButton","itemsCount","className","styles","cartButton","cartSplitter","Container","children","ref","clsx","container","Navbar","navbar","to","navbarLogo","MainLayout","main","Card","props","card","CardBody","cardBody","CardFooter","cardFooter","Button","wide","danger","classNames","React","useMemo","classValues","button","buttonWide","buttonDanger","ProductCard","imagePath","name","image","dispatch","handleAddToCart","useCallback","productCard","productImage","src","alt","productInfo","onClick","ProductCards","useEffect","productCards","HomePage","CartGridItem","handleRemoveItem","tableRow","rightAlignedCol","CartGrid","totalPrice","table","span","style","width","colSpan","emptyCol","cartEmpty","CartPage","Application","basename","path","element","running","window","__APPLICATION__","start","initialValues","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a5964e18.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__1d2hJ\",\"buttonWide\":\"Button_buttonWide__27x7C\",\"buttonDanger\":\"Button_buttonDanger__3TVJ3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"productCard\":\"ProductCard_productCard__VwQI_\",\"productImage\":\"ProductCard_productImage__Lcm4z\",\"productInfo\":\"ProductCard_productInfo__33-xO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cartButton\":\"CartButton_cartButton__-ICv4\",\"cartSplitter\":\"CartButton_cartSplitter__2P43C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__1REaL\",\"navbarLogo\":\"Navbar_navbarLogo__1PSjx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__t6wXG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"MainLayout_main__3TxGr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"productCards\":\"ProductCards_productCards__2Y8mb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1gwY0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardBody\":\"CardBody_cardBody__1tZfk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardFooter\":\"CardFooter_cardFooter__3BUdD\"};","import {TypedUseSelectorHook, useDispatch, useSelector} from \"react-redux\";\r\nimport type {AppDispatch, RootState} from \"./types\";\r\n\r\nexport const withPrefix = (prefix: string) =>\r\n    (actionName: string) => `${prefix}/${actionName}`;\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector","export const baseURL = 'https://murmuring-tor-81614.herokuapp.com';\r\nexport const apiURL = `${baseURL}/api`","import {IProduct} from \"../../models/product\";\r\nimport {createAsyncThunk, createReducer, createSelector} from \"@reduxjs/toolkit\";\r\nimport {withPrefix} from \"../utils\";\r\nimport {apiURL} from \"../../../utils/constants\";\r\nimport {RootState} from \"../types\";\r\nimport {v4 as uuidv4} from \"uuid\";\r\n\r\ninterface ProductsState {\r\n    isLoading: boolean;\r\n    data: IProduct[];\r\n}\r\n\r\nconst initialState: ProductsState = {\r\n    isLoading: false,\r\n    data: []\r\n}\r\n\r\nconst getActionName = withPrefix('PRODUCTS');\r\n\r\nconst filterDealers = async (dealers: string[]) => {\r\n    if (!dealers || !dealers.length) {\r\n        return [];\r\n    }\r\n\r\n    try {\r\n        const response = await fetch(`${apiURL}/dealers`);\r\n        const data = await response.json();\r\n        return data.filter((item: string) => dealers.find(dealer => dealer === item));\r\n    } catch (e) {\r\n        return [];\r\n    }\r\n}\r\n\r\nexport const fetchProducts = createAsyncThunk<IProduct[], string[]>(getActionName('fetchProducts'), async (dealers, thunkAPI) => {\r\n    let url = `${apiURL}/goods`\r\n\r\n    const filteredDealers = await filterDealers(dealers);\r\n    if (filteredDealers && filteredDealers.length) {\r\n        url = `${url}?dealers=${filteredDealers.join(',')}`\r\n    }\r\n\r\n    const response = await fetch(url);\r\n    const products: IProduct[] = await response.json()\r\n    return products.map(product => {\r\n        product.uuid = uuidv4();\r\n        return product;\r\n    });\r\n})\r\n\r\nexport const productsReducer = createReducer(initialState, builder => {\r\n    builder\r\n        .addCase(fetchProducts.pending, (state) => {\r\n            state.isLoading = true;\r\n        })\r\n        .addCase(fetchProducts.rejected, (state) => {\r\n            state.isLoading = false;\r\n        })\r\n        .addCase(fetchProducts.fulfilled, (state, action) => {\r\n            state.data = action.payload;\r\n        })\r\n})\r\n\r\nexport const selectProducts = (state: RootState) => state.products;\r\nexport const selectProductsData = createSelector(selectProducts, (state) => state.data);","import {createAction, createReducer, createSelector} from \"@reduxjs/toolkit\";\r\nimport {IProduct} from \"../../models/product\";\r\nimport {withPrefix} from \"../utils\";\r\nimport {RootState} from \"../types\";\r\n\r\nexport interface CartItem {\r\n    product: IProduct;\r\n    count: number;\r\n}\r\n\r\ninterface CartState {\r\n    items: CartItem[];\r\n}\r\n\r\nconst initialState: CartState = {\r\n    items: [],\r\n}\r\n\r\nconst getActionName = withPrefix('CART');\r\nexport const addToCart = createAction<IProduct>(getActionName('addToCart'));\r\nexport const removeFromCart = createAction<string>(getActionName('removeFromCart'));\r\nexport const removeAllFromCart = createAction(getActionName('removeAllFromCart'));\r\n\r\nexport const cartReducer = createReducer(initialState, builder => {\r\n    builder\r\n        .addCase(addToCart, (state, action) => {\r\n            const existing = state.items.find(v => v.product.uuid === action.payload.uuid);\r\n            if (existing) {\r\n                existing.count++;\r\n            } else {\r\n                state.items.push({\r\n                    product: action.payload,\r\n                    count: 1,\r\n                })\r\n            }\r\n        })\r\n        .addCase(removeFromCart, (state, action) => {\r\n            const item = state.items.find(v => v.product.uuid === action.payload);\r\n\r\n            if (!item) {\r\n                return;\r\n            }\r\n\r\n            if (item.count > 1) {\r\n                item.count--;\r\n            } else {\r\n                state.items = state.items.filter(v => v.product.uuid !== action.payload);\r\n            }\r\n        })\r\n        .addCase(removeAllFromCart, (state) => {\r\n            state.items = [];\r\n        })\r\n});\r\n\r\nexport const selectCart = (state: RootState) => state.cart;\r\nexport const selectCartItems = createSelector(selectCart, (cart) => cart.items);\r\nexport const selectCartItemsCount = createSelector(\r\n    selectCartItems,\r\n    (items) => items.reduce((acc, item) => acc + item.count, 0)\r\n);\r\nexport const selectCartTotalPrice = createSelector(\r\n    selectCartItems,\r\n    (items) => items.reduce((acc, item) => {\r\n        const summaryPrice = item.product.price * item.count;\r\n        return acc + summaryPrice;\r\n    }, 0).toFixed(2)\r\n);","import {combineReducers} from \"redux\";\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { persistReducer, PersistConfig } from \"redux-persist\";\r\nimport {productsReducer} from \"./products\";\r\nimport {cartReducer} from \"./cart\";\r\n\r\nconst rootReducer = combineReducers({\r\n    products: productsReducer,\r\n    cart: cartReducer,\r\n});\r\n\r\nconst persistConfig: PersistConfig<ReturnType<typeof rootReducer>> = {\r\n    key: 'ROOT',\r\n    storage,\r\n    whitelist: ['cart']\r\n}\r\n\r\nexport const persistedReducer = persistReducer(persistConfig, rootReducer);","import {configureStore} from \"@reduxjs/toolkit\";\r\nimport {persistedReducer} from \"./reducers\";\r\nimport {persistStore, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER} from \"redux-persist\";\r\n\r\nconst persistActions = [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\r\n\r\nexport const store = configureStore({\r\n    reducer: persistedReducer,\r\n    middleware: getDefaultMiddleware => getDefaultMiddleware({\r\n        serializableCheck: {\r\n            ignoredActions: [...persistActions]\r\n        }\r\n    })\r\n})\r\n\r\nexport const persistor = persistStore(store);\r\n\r\nexport {useAppDispatch, useAppSelector} from \"./utils\";","import styles from \"./CartButton.module.scss\";\r\nimport {useAppSelector} from \"../../core/redux/utils\";\r\nimport {selectCartItemsCount} from \"../../core/redux/reducers/cart\";\r\n\r\nexport const CartButton = () => {\r\n    const itemsCount = useAppSelector(selectCartItemsCount)\r\n\r\n    return (\r\n        <button className={styles.cartButton}>\r\n            Cart\r\n            <span className={styles.cartSplitter} />\r\n            {itemsCount}\r\n        </button>\r\n    )\r\n}","import React, {HTMLAttributes} from \"react\";\r\nimport clsx from \"clsx\";\r\nimport styles from \"./Container.module.scss\"\r\n\r\nexport const Container: React.FC<React.DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>> = ({children, className, ref}) => {\r\n    return <div ref={ref} className={clsx(styles.container, className)}>\r\n        {children}\r\n    </div>\r\n}","import React from \"react\";\r\nimport {CartButton} from \"../cart/CartButton\";\r\nimport styles from \"./Navbar.module.scss\";\r\nimport {Container} from \"../container\";\r\nimport {Link} from \"react-router-dom\"\r\n\r\nexport const Navbar = () => {\r\n\r\n    return <header>\r\n        <Container className={styles.navbar}>\r\n            <Link to=\"/\">\r\n                <h1 className={styles.navbarLogo}>CRA Internet Shop</h1>\r\n            </Link>\r\n            <Link to=\"/cart\">\r\n                <CartButton/>\r\n            </Link>\r\n        </Container>\r\n    </header>\r\n}","import React from \"react\";\r\nimport {Navbar} from \"../../components/navbar\";\r\nimport styles from \"./MainLayout.module.scss\";\r\n\r\nexport const MainLayout: React.FC = ({children}) => {\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <main className={styles.main}>\r\n                {children}\r\n            </main>\r\n        </>\r\n    )\r\n}","import React from \"react\";\r\nimport styles from \"./Card.module.scss\";\r\nimport clsx from \"clsx\";\r\n\r\ninterface CardProps extends  React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement> {}\r\n\r\nexport const Card: React.FC<CardProps> = ({children, className, ...props}) => {\r\n    return (\r\n        <div {...props} className={clsx(className, styles.card)}>\r\n            {children}\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport styles from \"./CardBody.module.scss\";\r\n\r\nexport const CardBody: React.FC = ({children}) => {\r\n    return (\r\n        <div className={styles.cardBody}>\r\n            {children}\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport styles from \"./CardFooter.module.scss\";\r\n\r\nexport const CardFooter: React.FC = ({children}) => {\r\n    return (\r\n        <div className={styles.cardFooter}>\r\n            {children}\r\n        </div>\r\n    )\r\n}","import React, {HTMLAttributes} from \"react\";\r\nimport styles from \"./Button.module.scss\";\r\nimport clsx, {ClassValue} from \"clsx\";\r\n\r\ninterface ButtonProps extends React.DetailedHTMLProps<HTMLAttributes<HTMLButtonElement>, HTMLButtonElement> {\r\n    wide?: boolean;\r\n    danger?: boolean;\r\n}\r\n\r\nexport const Button: React.FC<ButtonProps> = ({\r\n                                                  children,\r\n                                                  className,\r\n                                                  wide,\r\n                                                  danger,\r\n                                                  ...props\r\n                                              }) => {\r\n\r\n    const classNames = React.useMemo(() => {\r\n        const classValues: ClassValue[] = [className, styles.button]\r\n        wide && classValues.push(styles.buttonWide)\r\n        danger && classValues.push(styles.buttonDanger)\r\n        return classValues;\r\n    }, [wide, danger, className])\r\n\r\n    return <button {...props} className={clsx(classNames)}>{children}</button>\r\n}","import React from \"react\";\r\nimport {IProduct} from \"../../core/models/product\";\r\nimport {Card, CardBody, CardFooter} from \"../card\";\r\nimport {Button} from \"../button/Button\";\r\nimport {useAppDispatch} from \"../../core/redux\";\r\nimport {addToCart} from \"../../core/redux/reducers/cart\";\r\nimport {getImagePath} from \"../../utils/image\";\r\nimport styles from \"./ProductCard.module.scss\";\r\n\r\ninterface ProductCardProps {\r\n    product: IProduct\r\n}\r\n\r\nexport const ProductCard: React.FC<ProductCardProps> = ({product}) => {\r\n    const {name, price, image} = product;\r\n\r\n    const dispatch = useAppDispatch();\r\n    const handleAddToCart = React.useCallback(() => {\r\n        dispatch(addToCart(product));\r\n    }, [product]);\r\n\r\n    return (\r\n        <Card className={styles.productCard}>\r\n            <img className={styles.productImage} src={getImagePath(image)} alt=\"Node Logo\"/>\r\n            <CardBody>\r\n                <div className={styles.productInfo}>\r\n                    <h4>{name}</h4>\r\n                    <h4>${price}</h4>\r\n                </div>\r\n            </CardBody>\r\n            <CardFooter>\r\n                <Button wide onClick={handleAddToCart}>Add to cart</Button>\r\n            </CardFooter>\r\n        </Card>\r\n    )\r\n}","import {baseURL} from \"./constants\";\r\n\r\nexport const getImagePath = (imagePath: string) => `${baseURL}${imagePath}`;","import React from \"react\";\r\nimport styles from \"./ProductCards.module.scss\";\r\nimport {ProductCard} from \"./ProductCard\";\r\nimport {Container} from \"../container\";\r\nimport {useAppDispatch, useAppSelector} from \"../../core/redux\";\r\nimport {fetchProducts, selectProductsData} from \"../../core/redux/reducers/products\";\r\n\r\ninterface ProductCardsProps {\r\n    dealers: string[];\r\n}\r\n\r\nexport const ProductCards: React.FC<ProductCardsProps> = ({dealers}) => {\r\n    const dispatch = useAppDispatch();\r\n    const products = useAppSelector(selectProductsData);\r\n\r\n    React.useEffect(() => {\r\n        dispatch(fetchProducts(dealers));\r\n    }, [])\r\n\r\n    return (\r\n        <Container className={styles.productCards}>\r\n            {products.map(product => <ProductCard key={product.uuid} product={product} />)}\r\n        </Container>\r\n    )\r\n}","import React from \"react\";\r\nimport {MainLayout} from \"../layouts\";\r\nimport {ProductCards} from \"../components/product/ProductCards\";\r\n\r\ninterface HomePageProps {\r\n    dealers: string[];\r\n}\r\n\r\nexport const HomePage: React.FC<HomePageProps> = ({dealers}) => {\r\n    return (\r\n        <MainLayout>\r\n            <ProductCards dealers={dealers} />\r\n        </MainLayout>\r\n    )\r\n}","import React from \"react\";\r\nimport {Button} from \"../button/Button\";\r\nimport {useAppDispatch} from \"../../core/redux\";\r\nimport {CartItem, removeFromCart} from \"../../core/redux/reducers/cart\";\r\nimport styles from \"./CartGrid.module.scss\";\r\n\r\ninterface CartGridItemProps {\r\n    item: CartItem;\r\n}\r\n\r\nexport const CartGridItem: React.FC<CartGridItemProps> = ({item}) => {\r\n    const dispatch = useAppDispatch();\r\n\r\n    const handleRemoveItem = React.useCallback(() => {\r\n        dispatch(removeFromCart(item.product.uuid));\r\n    }, [])\r\n\r\n    const {product, count} = item;\r\n\r\n    return (\r\n        <tr className={styles.tableRow}>\r\n            <td>{product.name}</td>\r\n            <td>${product.price}</td>\r\n            <td>{count}</td>\r\n            <td className={styles.rightAlignedCol}>\r\n                <Button danger onClick={handleRemoveItem}>\r\n                    Remove\r\n                </Button>\r\n            </td>\r\n        </tr>\r\n    )\r\n}","import {useAppDispatch, useAppSelector} from \"../../core/redux/utils\";\r\nimport {removeAllFromCart, selectCartItems, selectCartTotalPrice} from \"../../core/redux/reducers/cart\";\r\nimport {Container} from \"../container\";\r\nimport {CartGridItem} from \"./CartGridItem\";\r\nimport styles from \"./CartGrid.module.scss\";\r\nimport {Button} from \"../button/Button\";\r\n\r\nexport const CartGrid = () => {\r\n    const dispatch = useAppDispatch();\r\n    const items = useAppSelector(selectCartItems);\r\n    const totalPrice = useAppSelector(selectCartTotalPrice);\r\n\r\n    return (\r\n        <Container>\r\n            {\r\n                !items.length ?\r\n                    <h4 className={styles.cartEmpty}>Cart is empty...</h4> :\r\n                    <table className={styles.table}>\r\n                        <colgroup>\r\n                            <col span={1} style={{width: \"60%\"}}/>\r\n                            <col span={1} style={{width: \"15%\"}}/>\r\n                            <col span={1} style={{width: \"10%\"}}/>\r\n                            <col span={1} style={{width: \"15%\"}}/>\r\n                        </colgroup>\r\n\r\n                        <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Price</th>\r\n                            <th>Count</th>\r\n                            <th className={styles.rightAlignedCol}>\r\n                                <Button danger onClick={() => dispatch(removeAllFromCart())}>Remove All</Button>\r\n                            </th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {items.map(item => <CartGridItem key={item.product.uuid} item={item}/>)}\r\n                        <tr>\r\n                            <td><b>Total:</b></td>\r\n                            <td>${totalPrice}</td>\r\n                            <td colSpan={1} className={styles.emptyCol}/>\r\n                        </tr>\r\n                        </tbody>\r\n                    </table>\r\n            }\r\n        </Container>\r\n    )\r\n}","import {MainLayout} from \"../layouts\";\r\nimport {CartGrid} from \"../components/cart/CartGrid\";\r\n\r\nexport const CartPage = () => {\r\n    return (\r\n        <MainLayout>\r\n            <CartGrid />\r\n        </MainLayout>\r\n    )\r\n}","import React from 'react';\nimport {store, persistor} from \"./core/redux\";\nimport {Provider} from \"react-redux\";\nimport {PersistGate} from \"redux-persist/integration/react\";\nimport {\n    BrowserRouter as Router,\n    Routes,\n    Route\n} from \"react-router-dom\";\nimport {HomePage, CartPage} from \"./pages\";\n\ninterface ApplicationProps {\n    dealers: string[];\n}\n\nexport const Application: React.FC<ApplicationProps> = ({dealers}) => {\n    return (\n        <Provider store={store}>\n            <PersistGate persistor={persistor}>\n                <Router basename=\"/perx-internet-shop\">\n                    <Routes>\n                        <Route path=\"/\" element={<HomePage dealers={dealers} />}/>\n                        <Route path=\"/cart\" element={<CartPage />}/>\n                    </Routes>\n                </Router>\n            </PersistGate>\n        </Provider>\n    )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Application} from './Application';\nimport './index.scss';\n\ninterface InitialValues {\n    dealers: string[];\n}\n\n\nlet running = false;\n\nfunction start(initialValues?: InitialValues) {\n    if (running) {\n        console.log(\"Application already running...\")\n        return;\n    }\n\n    const dealers = initialValues ? initialValues.dealers : [];\n\n    running = true;\n    console.log(\"Application starting with initial values...\", initialValues);\n    ReactDOM.render(\n        <Application dealers={dealers} />,\n        document.getElementById('root')\n    );\n}\n\n(window as any).__APPLICATION__ = {\n    start,\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"CartGrid_table__2d81L\",\"rightAlignedCol\":\"CartGrid_rightAlignedCol__2da3K\",\"emptyCol\":\"CartGrid_emptyCol__1Strf\",\"cartEmpty\":\"CartGrid_cartEmpty__l18eN\"};"],"sourceRoot":""}